#!/bin/bash
# -A 1 Algoritm A with paralelity 1 (so basically sequential)
# -S 1 test each step separately
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
madagascar=$DIR/../bin/MpC

i=0
splitPoint=0
for param in "$@"
do
i=$((i + 1))
case $param in
	::)
		splitPoint=$i
		;;
esac
done

problem="${@:1:1}"
domain="$( dirname "${problem}" )/domain.pddl"

if [ $splitPoint != 0 ]; then
	madagascarArgs="${@:2:$((splitPoint - 2))}"
	incplanArgs="${@:$((splitPoint + 1))}"

	incplanInput="problem.in"
	incplanOutput="problem.out"

	cmd="$madagascar $domain $problem $madagascarArgs -b $incplanInput -L"
	echo ""
	echo $cmd
	eval $cmd
	incplanInput="$incplanInput.cnf"

	cmd="$incplanArgs --outputSolverLike $incplanInput | grep -v '^c' > $incplanOutput"
	echo ""
	echo $cmd
	/usr/bin/time -f "solvingTime=%e" bash -c "$cmd"

	#extract the step size from the result
	header=($(head -n 1 $incplanOutput))
	echo "header: $header"
	varsPerTime="${header[1]}"
	steps="${header[2]}"
	steps=$((steps-1))
	sed -i '1d' $incplanOutput

	cmd="$madagascar $domain $problem -s $incplanOutput -T $steps"
	echo ""
	echo $cmd
	eval $cmd
else
	cmd="$madagascar $domain $problem ${@:2}"
	/usr/bin/time -f "solvingTime=%e" bash -c "$cmd"
fi